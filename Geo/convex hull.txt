
#define sz(v)      ((int)((v).size()))
complex<ll> cntr;
vector<complex<ll>> ConvexHull(vector<complex<ll>> v)
{
    if(v.size() <= 1)
        return v;
    for(int i=1; i<v.size(); i++)
        if(v[i].imag()<v[0].imag() ||
                (v[i].imag()==v[0].imag() && v[i].real()<v[0].real()))
            swap(v[i],v[0]);
    cntr = v[0];
    sort(v.begin()+1, v.end(), sort_cw);
    vector<complex<ll> > ch;
    v.push_back(v[0]);
    for (int i = 0; i < v.size(); i++)
    {
        while (sz(ch) > 1 &&
                cp(ch[sz(ch)-2]-ch[sz(ch)-1], v[i]-ch[sz(ch)-1]) >= 0)
            ch.pop_back();

        ch.push_back(v[i]);
    }
    ch.pop_back();
    return ch;
}
